pipeline:
    name: reactJS
    identifier: reactJS
    projectIdentifier: GestureRecognition
    orgIdentifier: default
    tags:
        node: "16.5"
        react: 17.0.2
        tensorflowjs: 3.7.0
        featureflags: ""
    properties:
        ci:
            codebase:
                connectorRef: mansonggithub
                repoName: improved-happiness
                build: <+input>
    stages:
        - stage:
              name: Build Publish
              identifier: Build_and_Publish
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: mansonggke
                          namespace: harness-build
                  execution:
                      steps:
                          - step:
                                type: RestoreCacheS3
                                name: Restore Cache
                                identifier: Restore_Cache
                                spec:
                                    connectorRef: mansongaws
                                    region: eu-west-2
                                    bucket: mansong-npm
                                    key: gesturerecognition
                                    archiveFormat: Tar
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1.0"
                                failureStrategies: []
                                when:
                                    stageStatus: Success
                                    condition: "false"
                          - parallel:
                                - step:
                                      type: Run
                                      name: DockerLint
                                      identifier: DockerLint
                                      spec:
                                          connectorRef: mansongdockerhub
                                          image: hadolint/hadolint:latest-alpine
                                          command: |-
                                              hadolint Dockerfile.prod
                                              hadolint Dockerfile.dev
                                          privileged: false
                                - step:
                                      type: Plugin
                                      name: SonarQube
                                      identifier: SonarQube
                                      spec:
                                          connectorRef: mansongdockerhub
                                          image: aosapps/drone-sonar-plugin
                                          privileged: true
                                          settings:
                                              sonar_token: a15e5b6b5fa07e06e5297330e7891c12323a4e05
                                              sonar_host: http://35.189.72.203:9000
                                              sources: src
                                              showProfiling: "true"
                                              level: DEBUG
                                              usingProperties: "true"
                                          resources:
                                              limits:
                                                  memory: 1Gi
                                                  cpu: "1.0"
                          - step:
                                type: Run
                                name: Install Dependencies
                                identifier: Install_Dependencies
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: <+Build_and_Publish.variables.node_version>
                                    command: npm install
                                    privileged: false
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                          - step:
                                type: Run
                                name: Run Tests
                                identifier: Run_Tests
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: <+Build_and_Publish.variables.node_version>
                                    command: npm test
                                    privileged: false
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "**/*.xml"
                                                - "*.xml"
                          - step:
                                type: Run
                                name: Build
                                identifier: Build
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: <+Build_and_Publish.variables.node_version>
                                    command: npm run build
                                    privileged: false
                                    resources:
                                        limits:
                                            memory: 2Gi
                                            cpu: "1"
                          - parallel:
                                - step:
                                      type: SaveCacheS3
                                      name: Rebuild Cache
                                      identifier: Rebuild_Cache
                                      spec:
                                          connectorRef: mansongaws
                                          region: eu-west-2
                                          bucket: mansong-npm
                                          key: gesturerecognition
                                          sourcePaths:
                                              - node_modules
                                          archiveFormat: Tar
                                          resources:
                                              limits:
                                                  memory: 1.0Gi
                                                  cpu: "1.0"
                                - step:
                                      type: BuildAndPushDockerRegistry
                                      name: Push Docker Image
                                      identifier: Push_Docker_Image
                                      spec:
                                          connectorRef: mansongdockerhub
                                          repo: mansong/gesturerecognition
                                          tags:
                                              - <+pipeline.sequenceId>
                                              - latest
                                          dockerfile: Dockerfile.prod
                                          context: ./
                                          optimize: true
                                          resources:
                                              limits:
                                                  memory: 1Gi
                                                  cpu: "1"
                          - step:
                                type: Run
                                name: Scan Image
                                identifier: Scan_Docker_Image
                                spec:
                                    connectorRef: mansongdockerhub
                                    image: bitnami/trivy:latest
                                    command: trivy image mansong/gesturerecognition:<+pipeline.sequenceId>
                                    privileged: true
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - junit-report.xml
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1.0"
                  serviceConfig:
                      serviceRef: ""
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
              variables:
                  - name: node_version
                    type: String
                    value: node:16.5.0-alpine3.14
        - stage:
              name: Staging
              identifier: Staging
              description: ""
              type: Deployment
              spec:
                  serviceConfig:
                      serviceRef: gesturerecognition
                      serviceDefinition:
                          type: Kubernetes
                          spec:
                              variables: []
                              manifests:
                                  - manifest:
                                        identifier: dev
                                        type: K8sManifest
                                        spec:
                                            store:
                                                type: Github
                                                spec:
                                                    connectorRef: mansonggithub
                                                    gitFetchType: Branch
                                                    paths:
                                                        - manifests/dev/resources.yaml
                                                        - manifests/dev/ingress.yaml
                                                        - manifests/dev/cert.yaml
                                                    repoName: improved-happiness
                                                    branch: main
                                            skipResourceVersioning: false
                              artifacts:
                                  primary:
                                      type: DockerRegistry
                                      spec:
                                          connectorRef: mansongdockerhub
                                          imagePath: mansong/gesturerecognition
                                          tagRegex: latest
                  infrastructure:
                      environmentRef: Development
                      infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                              connectorRef: mansonggke
                              namespace: staging
                              releaseName: release-<+INFRA_KEY>
                          provisioner:
                              steps:
                                  - step:
                                        type: TerraformPlan
                                        name: Plan
                                        identifier: Plan
                                        timeout: 10m
                                        spec:
                                            provisionerIdentifier: staging_s3
                                            configuration:
                                                command: Apply
                                                configFiles:
                                                    store:
                                                        spec:
                                                            connectorRef: mansonggithub
                                                            repoName: laughing-octo-train
                                                            gitFetchType: Branch
                                                            branch: main
                                                            folderPath: "."
                                                        type: Github
                                                secretManagerRef: org.harnessSecretManager
                                                environmentVariables:
                                                    - name: AWS_ACCESS_KEY_ID
                                                      value: <+stage.variables.AWS_ACCESS_KEY_ID>
                                                      type: String
                                                    - name: AWS_SECRET_ACCESS_KEY
                                                      value: <+stage.variables.AWS_SECRET_ACCESS_KEY>
                                                      type: String
                                  - step:
                                        type: TerraformApply
                                        name: Apply
                                        identifier: Apply
                                        timeout: 10m
                                        spec:
                                            provisionerIdentifier: staging_s3
                                            configuration:
                                                type: InheritFromPlan
                              rollbackSteps:
                                  - step:
                                        type: TerraformRollback
                                        name: Rollback
                                        identifier: Rollback
                                        timeout: 10m
                                        spec:
                                            provisionerIdentifier: staging_s3
                      allowSimultaneousDeployments: true
                  execution:
                      steps:
                          - step:
                                name: Rollout Deployment
                                identifier: rolloutDeployment
                                type: K8sRollingDeploy
                                timeout: 10m
                                spec:
                                    skipDryRun: true
                          - parallel:
                                - step:
                                      type: Http
                                      name: HealthCheck
                                      identifier: HealthCheck
                                      spec:
                                          url: https://mansong.ff-demo.co.uk/health
                                          method: GET
                                          headers: []
                                          outputVariables: []
                                      timeout: 10s
                                - step:
                                      type: ShellScript
                                      name: Selenium
                                      identifier: Selenium
                                      spec:
                                          shell: Bash
                                          onDelegate: true
                                          source:
                                              type: Inline
                                              spec:
                                                  script: |
                                                      rm -rf /tmp/reactjs | true
                                                      mkdir -p /tmp/reactjs
                                                      git clone https://github.com/mansong1/improved-happiness.git /tmp/reactjs
                                                      cd /tmp/reactjs/selenium

                                                      echo "Running Selenium Tests"
                                                      python3 loginTest.py
                                          environmentVariables: []
                                          outputVariables: []
                                          executionTarget: {}
                                          delegateSelectors:
                                              - mansong-gke
                                      timeout: 10m
                                      failureStrategies: []
                                - step:
                                      type: ShellScript
                                      name: Regression
                                      identifier: Regression
                                      spec:
                                          shell: Bash
                                          onDelegate: true
                                          source:
                                              type: Inline
                                              spec:
                                                  script: echo "Regressions Tests"
                                          environmentVariables: []
                                          outputVariables: []
                                          executionTarget: {}
                                      timeout: 10m
                          - step:
                                type: ShellScript
                                name: Jmeter
                                identifier: Jmeter
                                spec:
                                    shell: Bash
                                    onDelegate: true
                                    source:
                                        type: Inline
                                        spec:
                                            script: echo "Jmeter"
                                    environmentVariables: []
                                    outputVariables: []
                                    executionTarget: {}
                                timeout: 10m
                          - step:
                                type: TerraformDestroy
                                name: Destroy
                                identifier: Destroy
                                spec:
                                    provisionerIdentifier: staging_s3
                                    configuration:
                                        type: InheritFromPlan
                                timeout: 10m
                                failureStrategies: []
                      rollbackSteps:
                          - step:
                                name: Rollback Rollout Deployment
                                identifier: rollbackRolloutDeployment
                                type: K8sRollingRollback
                                timeout: 10m
                                spec: {}
                  serviceDependencies: []
              tags: {}
              failureStrategies:
                  - onFailure:
                        errors:
                            - AllErrors
                        action:
                            type: StageRollback
              variables:
                  - name: AWS_ACCESS_KEY_ID
                    type: Secret
                    value: aws_key_id
                  - name: AWS_SECRET_ACCESS_KEY
                    type: Secret
                    value: aws_secret_key
